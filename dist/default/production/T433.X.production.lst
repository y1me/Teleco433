

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri May 26 15:27:35 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC12F1572 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  008C                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  010C                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0115                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  0118                     	;# 
    99  0119                     	;# 
   100  011D                     	;# 
   101  011D                     	;# 
   102  018C                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0197                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  028C                     	;# 
   122  030C                     	;# 
   123  038C                     	;# 
   124  0391                     	;# 
   125  0392                     	;# 
   126  0393                     	;# 
   127  0691                     	;# 
   128  0692                     	;# 
   129  0693                     	;# 
   130  0694                     	;# 
   131  0695                     	;# 
   132  0D8E                     	;# 
   133  0D8F                     	;# 
   134  0D90                     	;# 
   135  0D91                     	;# 
   136  0D91                     	;# 
   137  0D92                     	;# 
   138  0D93                     	;# 
   139  0D93                     	;# 
   140  0D94                     	;# 
   141  0D95                     	;# 
   142  0D95                     	;# 
   143  0D96                     	;# 
   144  0D97                     	;# 
   145  0D97                     	;# 
   146  0D98                     	;# 
   147  0D99                     	;# 
   148  0D99                     	;# 
   149  0D9A                     	;# 
   150  0D9B                     	;# 
   151  0D9C                     	;# 
   152  0D9C                     	;# 
   153  0D9D                     	;# 
   154  0D9D                     	;# 
   155  0D9E                     	;# 
   156  0D9F                     	;# 
   157  0DA0                     	;# 
   158  0DA1                     	;# 
   159  0DA1                     	;# 
   160  0DA2                     	;# 
   161  0DA3                     	;# 
   162  0DA3                     	;# 
   163  0DA4                     	;# 
   164  0DA5                     	;# 
   165  0DA5                     	;# 
   166  0DA6                     	;# 
   167  0DA7                     	;# 
   168  0DA7                     	;# 
   169  0DA8                     	;# 
   170  0DA9                     	;# 
   171  0DA9                     	;# 
   172  0DAA                     	;# 
   173  0DAB                     	;# 
   174  0DAC                     	;# 
   175  0DAC                     	;# 
   176  0DAD                     	;# 
   177  0DAD                     	;# 
   178  0DAE                     	;# 
   179  0DAF                     	;# 
   180  0DB0                     	;# 
   181  0DB1                     	;# 
   182  0DB1                     	;# 
   183  0DB2                     	;# 
   184  0DB3                     	;# 
   185  0DB3                     	;# 
   186  0DB4                     	;# 
   187  0DB5                     	;# 
   188  0DB5                     	;# 
   189  0DB6                     	;# 
   190  0DB7                     	;# 
   191  0DB7                     	;# 
   192  0DB8                     	;# 
   193  0DB9                     	;# 
   194  0DB9                     	;# 
   195  0DBA                     	;# 
   196  0DBB                     	;# 
   197  0DBC                     	;# 
   198  0DBC                     	;# 
   199  0DBD                     	;# 
   200  0DBD                     	;# 
   201  0DBE                     	;# 
   202  0DBF                     	;# 
   203  0DC0                     	;# 
   204  0FE4                     	;# 
   205  0FE5                     	;# 
   206  0FE6                     	;# 
   207  0FE7                     	;# 
   208  0FE8                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218                           
   219                           	psect	stringtext
   220  00BB                     __pstringtext:	
   221  00BB                     _code:	
   222  00BB  3419               	retlw	25
   223  00BC  3408               	retlw	8
   224  00BD                     __end_of_code:	
   225                           
   226                           	psect	nvCOMMON
   227  007B                     __pnvCOMMON:	
   228  007B                     _timer0ReloadVal:	
   229  007B                     	ds	1
   230  000C                     _PORTAbits	set	12
   231  000B                     _INTCONbits	set	11
   232  0015                     _TMR0	set	21
   233  008C                     _TRISAbits	set	140
   234  0097                     _WDTCON	set	151
   235  0098                     _OSCTUNE	set	152
   236  0099                     _OSCCONbits	set	153
   237  0099                     _OSCCON	set	153
   238  0095                     _OPTION_REGbits	set	149
   239  011D                     _APFCON	set	285
   240  010C                     _LATA	set	268
   241  018C                     _ANSELA	set	396
   242  020C                     _WPUA	set	524
   243                           
   244                           ; #config settings
   245  0000                     
   246                           	psect	cinit
   247  001F                     start_initialization:	
   248  001F                     __initialization:	
   249                           
   250                           ; Clear objects allocated to COMMON
   251  001F  01F0               	clrf	__pbssCOMMON& (0+127)
   252  0020  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   253  0021  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   254  0022  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   255  0023  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   256  0024  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   257  0025  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   258  0026                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  0026                     __end_of__initialization:	
   262  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   263  0027  0020               	movlb	0
   264  0028  2829               	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0070                     __pbssCOMMON:	
   268  0070                     _test:	
   269  0070                     	ds	2
   270  0072                     _process:	
   271  0072                     	ds	2
   272  0074                     _number:	
   273  0074                     	ds	2
   274  0076                     _flag:	
   275  0076                     	ds	1
   276                           
   277                           	psect	cstackCOMMON
   278  0077                     __pcstackCOMMON:	
   279  0077                     ?_TMR0_Initialize:	
   280  0077                     ?_OSCILLATOR_Initialize:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0077                     ?_WDT_Initialize:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0077                     ?_PIN_MANAGER_Initialize:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0077                     ?_INTERRUPT_InterruptManager:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0077                     ??_INTERRUPT_InterruptManager:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0077                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298                           
   299                           ; 1 bytes @ 0x0
   300  0077                     	ds	1
   301  0078                     ??_TMR0_Initialize:	
   302  0078                     ??_OSCILLATOR_Initialize:	
   303                           ; 1 bytes @ 0x1
   304                           
   305  0078                     ??_WDT_Initialize:	
   306                           ; 1 bytes @ 0x1
   307                           
   308  0078                     ??_PIN_MANAGER_Initialize:	
   309                           ; 1 bytes @ 0x1
   310                           
   311                           
   312                           ; 1 bytes @ 0x1
   313  0078                     	ds	1
   314  0079                     ??_main:	
   315                           
   316                           ; 1 bytes @ 0x2
   317  0079                     	ds	2
   318                           
   319                           	psect	maintext
   320  0029                     __pmaintext:	
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 144 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : B1F/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   340 ;;      Params:         0       0       0       0
   341 ;;      Locals:         0       0       0       0
   342 ;;      Temps:          2       0       0       0
   343 ;;      Totals:         2       0       0       0
   344 ;;Total ram usage:        2 bytes
   345 ;; Hardware stack levels required when called:    2
   346 ;; This function calls:
   347 ;;		_OSCILLATOR_Initialize
   348 ;;		_PIN_MANAGER_Initialize
   349 ;;		_TMR0_Initialize
   350 ;;		_WDT_Initialize
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _main
   358  0029                     _main:	
   359                           
   360                           ;main.c: 147: PIN_MANAGER_Initialize();
   361                           
   362                           ;incstack = 0
   363                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   364  0029  2087               	fcall	_PIN_MANAGER_Initialize
   365                           
   366                           ;main.c: 148: OSCILLATOR_Initialize();
   367  002A  20AE               	fcall	_OSCILLATOR_Initialize
   368                           
   369                           ;main.c: 149: WDT_Initialize();
   370  002B  20B7               	fcall	_WDT_Initialize
   371                           
   372                           ;main.c: 150: TMR0_Initialize();
   373  002C  209B               	fcall	_TMR0_Initialize
   374                           
   375                           ;main.c: 153: INTCONbits.GIE = 1;
   376  002D  178B               	bsf	11,7	;volatile
   377                           
   378                           ;main.c: 154: INTCONbits.PEIE = 1;
   379  002E  170B               	bsf	11,6	;volatile
   380                           
   381                           ;main.c: 156: flag.Tim320u = 0;
   382  002F  1076               	bcf	_flag,0	;volatile
   383  0030                     L1:	
   384                           
   385                           ;main.c: 157: number = 0;
   386  0030  01F4               	clrf	_number
   387  0031  01F5               	clrf	_number+1
   388  0032                     l507:	
   389                           ;main.c: 159: while (1)
   390                           
   391                           
   392                           ;main.c: 160: {
   393                           ;main.c: 161: if (flag.Tim320u)
   394  0032  1C76               	btfss	_flag,0	;volatile
   395  0033  2832               	goto	l507
   396                           
   397                           ;main.c: 162: {
   398                           ;main.c: 164: if (number == 0)
   399  0034  0874               	movf	_number,w
   400  0035  0475               	iorwf	_number+1,w
   401  0036  1D03               	btfss	3,2
   402  0037  2843               	goto	l517
   403                           
   404                           ;main.c: 165: {
   405                           ;main.c: 166: PORTAbits.RA4 = 1;
   406  0038  0020               	movlb	0	; select bank0
   407  0039  160C               	bsf	12,4	;volatile
   408                           
   409                           ;main.c: 167: process = code;
   410  003A  30BB               	movlw	low (_code| (0+32768))
   411  003B  0084               	movwf	4
   412  003C  3080               	movlw	high (_code| (0+32768))
   413  003D  0085               	movwf	5
   414  003E  3F00               	moviw [0]fsr0
   415  003F  00F2               	movwf	_process
   416  0040  3F01               	moviw [1]fsr0
   417  0041  00F3               	movwf	_process+1
   418  0042  2875               	goto	l537
   419  0043                     l517:	
   420                           ;main.c: 169: }
   421                           
   422                           ;main.c: 168: test = 0;
   423                           
   424                           
   425                           ;main.c: 170: else
   426                           ;main.c: 171: {
   427                           ;main.c: 172: if (number <= 36)
   428  0043  3000               	movlw	0
   429  0044  0275               	subwf	_number+1,w
   430  0045  3025               	movlw	37
   431  0046  1903               	skipnz
   432  0047  0274               	subwf	_number,w
   433  0048  1803               	skipnc
   434  0049  2878               	goto	l62
   435                           
   436                           ;main.c: 173: {
   437                           ;main.c: 176: if (test == 0) PORTAbits.RA4 = 0;
   438  004A  0870               	movf	_test,w
   439  004B  0471               	iorwf	_test+1,w
   440  004C  1D03               	btfss	3,2
   441  004D  2850               	goto	l523
   442  004E  0020               	movlb	0	; select bank0
   443  004F  120C               	bcf	12,4	;volatile
   444  0050                     l523:	
   445                           
   446                           ;main.c: 177: if (test == 1)
   447  0050  0370               	decf	_test,w
   448  0051  0471               	iorwf	_test+1,w
   449  0052  1D03               	btfss	3,2
   450  0053  2865               	goto	l64
   451                           
   452                           ;main.c: 178: {
   453                           ;main.c: 179: if (process & 1) PORTAbits.RA4 = 1;
   454  0054  1C72               	btfss	_process,0
   455  0055  2859               	goto	l65
   456  0056  0020               	movlb	0	; select bank0
   457  0057  160C               	bsf	12,4	;volatile
   458  0058  285B               	goto	l529
   459  0059                     l65:	
   460                           
   461                           ;main.c: 180: else PORTAbits.RA4 = 0;
   462  0059  0020               	movlb	0	; select bank0
   463  005A  120C               	bcf	12,4	;volatile
   464  005B                     l529:	
   465                           
   466                           ;main.c: 181: process = process >> 1;
   467  005B  0873               	movf	_process+1,w
   468  005C  00FA               	movwf	??_main+1
   469  005D  0872               	movf	_process,w
   470  005E  00F9               	movwf	??_main
   471  005F  36FA               	lsrf	??_main+1,f
   472  0060  0CF9               	rrf	??_main,f
   473  0061  0879               	movf	??_main,w
   474  0062  00F2               	movwf	_process
   475  0063  087A               	movf	??_main+1,w
   476  0064  00F3               	movwf	_process+1
   477  0065                     l64:	
   478                           
   479                           ;main.c: 182: }
   480                           ;main.c: 183: if (test == 2) PORTAbits.RA4 = 1;
   481  0065  3002               	movlw	2
   482  0066  0670               	xorwf	_test,w
   483  0067  0471               	iorwf	_test+1,w
   484  0068  1D03               	btfss	3,2
   485  0069  286C               	goto	l533
   486  006A  0020               	movlb	0	; select bank0
   487  006B  160C               	bsf	12,4	;volatile
   488  006C                     l533:	
   489                           
   490                           ;main.c: 184: test++;
   491  006C  3001               	movlw	1
   492  006D  07F0               	addwf	_test,f
   493  006E  3000               	movlw	0
   494  006F  3DF1               	addwfc	_test+1,f
   495                           
   496                           ;main.c: 185: if (test == 3) test = 0;
   497  0070  3003               	movlw	3
   498  0071  0670               	xorwf	_test,w
   499  0072  0471               	iorwf	_test+1,w
   500  0073  1D03               	btfss	3,2
   501  0074  287A               	goto	l61
   502  0075                     l537:	
   503  0075  01F0               	clrf	_test
   504  0076  01F1               	clrf	_test+1
   505                           
   506                           ;main.c: 200: }
   507  0077  287A               	goto	l61
   508  0078                     l62:	
   509                           
   510                           ;main.c: 201: else PORTAbits.RA4 = 0;
   511  0078  0020               	movlb	0	; select bank0
   512  0079  120C               	bcf	12,4	;volatile
   513  007A                     l61:	
   514                           
   515                           ;main.c: 202: }
   516                           ;main.c: 204: flag.Tim320u = 0;
   517  007A  1076               	bcf	_flag,0	;volatile
   518                           
   519                           ;main.c: 206: number++;
   520  007B  3001               	movlw	1
   521  007C  07F4               	addwf	_number,f
   522  007D  3000               	movlw	0
   523  007E  3DF5               	addwfc	_number+1,f
   524                           
   525                           ;main.c: 208: if (number > 1000)
   526  007F  3003               	movlw	3
   527  0080  0275               	subwf	_number+1,w
   528  0081  30E9               	movlw	233
   529  0082  1903               	skipnz
   530  0083  0274               	subwf	_number,w
   531  0084  1C03               	skipc
   532  0085  2832               	goto	l507
   533  0086  2830               	goto	L1
   534  0087                     __end_of_main:	
   535                           ;main.c: 209: {
   536                           ;main.c: 210: number = 0;
   537                           
   538                           
   539                           	psect	text1
   540  00B7                     __ptext1:	
   541 ;; *************** function _WDT_Initialize *****************
   542 ;; Defined at:
   543 ;;		line 82 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   557 ;;      Params:         0       0       0       0
   558 ;;      Locals:         0       0       0       0
   559 ;;      Temps:          0       0       0       0
   560 ;;      Totals:         0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _WDT_Initialize
   573  00B7                     _WDT_Initialize:	
   574                           
   575                           ;main.c: 85: WDTCON = 0x16;
   576                           
   577                           ;incstack = 0
   578                           ; Regs used in _WDT_Initialize: [wreg]
   579  00B7  3016               	movlw	22
   580  00B8  0021               	movlb	1	; select bank1
   581  00B9  0097               	movwf	23	;volatile
   582  00BA  0008               	return
   583  00BB                     __end_of_WDT_Initialize:	
   584                           
   585                           	psect	text2
   586  009B                     __ptext2:	
   587 ;; *************** function _TMR0_Initialize *****************
   588 ;; Defined at:
   589 ;;		line 44 in file "main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   603 ;;      Params:         0       0       0       0
   604 ;;      Locals:         0       0       0       0
   605 ;;      Temps:          1       0       0       0
   606 ;;      Totals:         1       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _TMR0_Initialize
   619  009B                     _TMR0_Initialize:	
   620                           
   621                           ;main.c: 49: OPTION_REGbits.nWPUEN = 1;
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0]
   625  009B  0021               	movlb	1	; select bank1
   626  009C  1795               	bsf	21,7	;volatile
   627                           
   628                           ;main.c: 50: OPTION_REGbits.INTEDG = 1;
   629  009D  1715               	bsf	21,6	;volatile
   630                           
   631                           ;main.c: 51: OPTION_REGbits.TMR0CS = 0;
   632  009E  1295               	bcf	21,5	;volatile
   633                           
   634                           ;main.c: 52: OPTION_REGbits.TMR0SE = 0;
   635  009F  1215               	bcf	21,4	;volatile
   636                           
   637                           ;main.c: 53: OPTION_REGbits.PSA = 0;
   638  00A0  1195               	bcf	21,3	;volatile
   639                           
   640                           ;main.c: 54: OPTION_REGbits.PS = 0;
   641  00A1  30F8               	movlw	-8
   642  00A2  0595               	andwf	21,f	;volatile
   643                           
   644                           ;main.c: 57: TMR0 = 247;
   645  00A3  30F7               	movlw	247
   646  00A4  0020               	movlb	0	; select bank0
   647  00A5  0095               	movwf	21	;volatile
   648                           
   649                           ;main.c: 60: timer0ReloadVal= 108;
   650  00A6  306C               	movlw	108
   651  00A7  00F8               	movwf	??_TMR0_Initialize
   652  00A8  0878               	movf	??_TMR0_Initialize,w
   653  00A9  00FB               	movwf	_timer0ReloadVal	;volatile
   654                           
   655                           ;main.c: 63: INTCONbits.TMR0IF = 0;
   656  00AA  110B               	bcf	11,2	;volatile
   657                           
   658                           ;main.c: 66: INTCONbits.TMR0IE = 1;
   659  00AB  168B               	bsf	11,5	;volatile
   660                           
   661                           ;main.c: 67: INTCONbits.TMR0IE == 1;
   662  00AC  080B               	movf	11,w	;volatile
   663  00AD  0008               	return
   664  00AE                     __end_of_TMR0_Initialize:	
   665                           
   666                           	psect	text3
   667  0087                     __ptext3:	
   668 ;; *************** function _PIN_MANAGER_Initialize *****************
   669 ;; Defined at:
   670 ;;		line 88 in file "main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   684 ;;      Params:         0       0       0       0
   685 ;;      Locals:         0       0       0       0
   686 ;;      Temps:          0       0       0       0
   687 ;;      Totals:         0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _PIN_MANAGER_Initialize
   700  0087                     _PIN_MANAGER_Initialize:	
   701                           
   702                           ;main.c: 93: LATA = 0x00;
   703                           
   704                           ;incstack = 0
   705                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   706  0087  0022               	movlb	2	; select bank2
   707  0088  018C               	clrf	12	;volatile
   708                           
   709                           ;main.c: 98: TRISAbits.TRISA4 = 0;
   710  0089  0021               	movlb	1	; select bank1
   711  008A  120C               	bcf	12,4	;volatile
   712                           
   713                           ;main.c: 99: PORTAbits.RA4 = 0;
   714  008B  0020               	movlb	0	; select bank0
   715  008C  120C               	bcf	12,4	;volatile
   716                           
   717                           ;main.c: 101: TRISAbits.TRISA2 = 0;
   718  008D  0021               	movlb	1	; select bank1
   719  008E  110C               	bcf	12,2	;volatile
   720                           
   721                           ;main.c: 102: PORTAbits.RA2 = 0;
   722  008F  0020               	movlb	0	; select bank0
   723  0090  110C               	bcf	12,2	;volatile
   724                           
   725                           ;main.c: 107: ANSELA = 0x00;
   726  0091  0023               	movlb	3	; select bank3
   727  0092  018C               	clrf	12	;volatile
   728                           
   729                           ;main.c: 112: WPUA = 0x3F;
   730  0093  303F               	movlw	63
   731  0094  0024               	movlb	4	; select bank4
   732  0095  008C               	movwf	12	;volatile
   733                           
   734                           ;main.c: 113: OPTION_REGbits.nWPUEN = 0;
   735  0096  0021               	movlb	1	; select bank1
   736  0097  1395               	bcf	21,7	;volatile
   737                           
   738                           ;main.c: 119: APFCON = 0x00;
   739  0098  0022               	movlb	2	; select bank2
   740  0099  019D               	clrf	29	;volatile
   741  009A  0008               	return
   742  009B                     __end_of_PIN_MANAGER_Initialize:	
   743                           
   744                           	psect	text4
   745  00AE                     __ptext4:	
   746 ;; *************** function _OSCILLATOR_Initialize *****************
   747 ;; Defined at:
   748 ;;		line 71 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   762 ;;      Params:         0       0       0       0
   763 ;;      Locals:         0       0       0       0
   764 ;;      Temps:          0       0       0       0
   765 ;;      Totals:         0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _OSCILLATOR_Initialize
   778  00AE                     _OSCILLATOR_Initialize:	
   779                           
   780                           ;main.c: 74: OSCCON = 0x30;
   781                           
   782                           ;incstack = 0
   783                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2+status,0]
   784  00AE  3030               	movlw	48
   785  00AF  0021               	movlb	1	; select bank1
   786  00B0  0099               	movwf	25	;volatile
   787                           
   788                           ;main.c: 75: OSCCONbits.IRCF = 0xD;
   789  00B1  0819               	movf	25,w	;volatile
   790  00B2  3987               	andlw	-121
   791  00B3  3868               	iorlw	104
   792  00B4  0099               	movwf	25	;volatile
   793                           
   794                           ;main.c: 77: OSCTUNE = 0x00;
   795  00B5  0198               	clrf	24	;volatile
   796  00B6  0008               	return
   797  00B7                     __end_of_OSCILLATOR_Initialize:	
   798                           
   799                           	psect	intentry
   800  0004                     __pintentry:	
   801 ;; *************** function _INTERRUPT_InterruptManager *****************
   802 ;; Defined at:
   803 ;;		line 126 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   817 ;;      Params:         0       0       0       0
   818 ;;      Locals:         0       0       0       0
   819 ;;      Temps:          1       0       0       0
   820 ;;      Totals:         1       0       0       0
   821 ;;Total ram usage:        1 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		Interrupt level 1
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830  0004                     _INTERRUPT_InterruptManager:	
   831                           
   832                           ;incstack = 0
   833  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   834                           
   835                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,0]
   836  0005  3180               	pagesel	$
   837  0006  0020               	movlb	0	; select bank0
   838  0007  087F               	movf	127,w
   839  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
   840                           
   841                           ;main.c: 129: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   842  0009  1A8B               	btfsc	11,5	;volatile
   843  000A  1D0B               	btfss	11,2	;volatile
   844  000B  281A               	goto	i1l55
   845                           
   846                           ;main.c: 130: {
   847                           ;main.c: 131: INTCONbits.TMR0IF = 0;
   848  000C  110B               	bcf	11,2	;volatile
   849                           
   850                           ;main.c: 132: flag.Tim320u = 1;
   851  000D  1476               	bsf	_flag,0	;volatile
   852                           
   853                           ;main.c: 133: PORTAbits.RA2 = ~PORTAbits.RA2;
   854  000E  1003               	clrc
   855  000F  1D0C               	btfss	12,2	;volatile
   856  0010  1403               	setc
   857  0011  1C03               	btfss	3,0
   858  0012  2816               	goto	u3_20
   859  0013  0020               	movlb	0	; select bank0
   860  0014  150C               	bsf	12,2	;volatile
   861  0015  2818               	goto	i1l495
   862  0016                     u3_20:	
   863  0016  0020               	movlb	0	; select bank0
   864  0017  110C               	bcf	12,2	;volatile
   865  0018                     i1l495:	
   866                           
   867                           ;main.c: 135: TMR0 = timer0ReloadVal;
   868  0018  087B               	movf	_timer0ReloadVal,w	;volatile
   869  0019  0095               	movwf	21	;volatile
   870  001A                     i1l55:	
   871                           ;main.c: 137: else
   872                           ;main.c: 138: {
   873                           
   874                           ;main.c: 136: }
   875                           
   876  001A  0877               	movf	??_INTERRUPT_InterruptManager,w
   877  001B  00FF               	movwf	127
   878  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   879  001D  0009               	retfie
   880  001E                     __end_of_INTERRUPT_InterruptManager:	
   881  007E                     btemp	set	126	;btemp
   882  007E                     int$flags	set	126
   883  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    2
    Data        0
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (1) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _TMR0_Initialize
   _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       C      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri May 26 15:27:35 2017

                        __CFG_CP$OFF 0000                                   l61 007A  
                                 l62 0078                                   l64 0065  
                                 l65 0059                      _timer0ReloadVal 007B  
                        __CFG_LVP$ON 0000                                  l523 0050  
                                l507 0032                                  l533 006C  
                                l517 0043                                  l537 0075  
                                l529 005B                         __CFG_BORV$LO 0000  
                               _LATA 010C                                 i1l55 001A  
                               _TMR0 0015                                 _WPUA 020C  
                               u3_20 0016                         __CFG_WRT$OFF 0000  
                               _code 00BB                                 _flag 0076  
                               _main 0029                                 _test 0070  
                               fsr0h 0005                                 fsr0l 0004  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 001E                        __CFG_MCLRE$ON 0000  
            __end_of_TMR0_Initialize 00AE       __size_of_OSCILLATOR_Initialize 0009  
      __end_of_OSCILLATOR_Initialize 00B7                                ?_main 0077  
                      __CFG_WDTE$OFF 0000                                i1l495 0018  
                     _WDT_Initialize 00B7                                status 0003  
                              wtemp0 007E                      __initialization 001F  
                       __end_of_code 00BD                         __end_of_main 0087  
        ?_INTERRUPT_InterruptManager 0077                               ??_main 0079  
                     __CFG_PLLEN$OFF 0000               __end_of_WDT_Initialize 00BB  
                             _APFCON 011D                               _ANSELA 018C  
                             _OSCCON 0099                               _WDTCON 0097  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                   ?_TMR0_Initialize 0077                               _number 0074  
                    ?_WDT_Initialize 0077              __end_of__initialization 0026  
                     __pcstackCOMMON 0077                       _OPTION_REGbits 0095  
                         __pnvCOMMON 007B                           __pmaintext 0029  
                         __pintentry 0004                              _OSCTUNE 0098  
                            __ptext1 00B7                              __ptext2 009B  
                            __ptext3 0087                              __ptext4 00AE  
              _OSCILLATOR_Initialize 00AE             ??_PIN_MANAGER_Initialize 0078  
                            _process 0072                 end_of_initialization 0026  
                       __pstringtext 00BB                     ??_WDT_Initialize 0078  
                          _PORTAbits 000C                     __CFG_FOSC$INTOSC 0000  
                          _TRISAbits 008C               ?_OSCILLATOR_Initialize 0077  
                start_initialization 001F             __size_of_TMR0_Initialize 0013  
    __size_of_PIN_MANAGER_Initialize 0014                     __CFG_LPBOREN$OFF 0000  
                        __pbssCOMMON 0070                            ___latbits 0000  
             _PIN_MANAGER_Initialize 0087         ??_INTERRUPT_InterruptManager 0077  
                  ??_TMR0_Initialize 0078  __size_of_INTERRUPT_InterruptManager 001A  
            ??_OSCILLATOR_Initialize 0078                        __size_of_main 005E  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001E  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0077                    __CFG_CLKOUTEN$OFF 0000  
                         _OSCCONbits 0099                      _TMR0_Initialize 009B  
     __end_of_PIN_MANAGER_Initialize 009B  
