

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed May 24 15:41:58 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F1572 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  008C                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  0111                     	;# 
    96  0112                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011D                     	;# 
   103  011D                     	;# 
   104  018C                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0197                     	;# 
   114  0199                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  020C                     	;# 
   123  028C                     	;# 
   124  030C                     	;# 
   125  038C                     	;# 
   126  0391                     	;# 
   127  0392                     	;# 
   128  0393                     	;# 
   129  0691                     	;# 
   130  0692                     	;# 
   131  0693                     	;# 
   132  0694                     	;# 
   133  0695                     	;# 
   134  0D8E                     	;# 
   135  0D8F                     	;# 
   136  0D90                     	;# 
   137  0D91                     	;# 
   138  0D91                     	;# 
   139  0D92                     	;# 
   140  0D93                     	;# 
   141  0D93                     	;# 
   142  0D94                     	;# 
   143  0D95                     	;# 
   144  0D95                     	;# 
   145  0D96                     	;# 
   146  0D97                     	;# 
   147  0D97                     	;# 
   148  0D98                     	;# 
   149  0D99                     	;# 
   150  0D99                     	;# 
   151  0D9A                     	;# 
   152  0D9B                     	;# 
   153  0D9C                     	;# 
   154  0D9C                     	;# 
   155  0D9D                     	;# 
   156  0D9D                     	;# 
   157  0D9E                     	;# 
   158  0D9F                     	;# 
   159  0DA0                     	;# 
   160  0DA1                     	;# 
   161  0DA1                     	;# 
   162  0DA2                     	;# 
   163  0DA3                     	;# 
   164  0DA3                     	;# 
   165  0DA4                     	;# 
   166  0DA5                     	;# 
   167  0DA5                     	;# 
   168  0DA6                     	;# 
   169  0DA7                     	;# 
   170  0DA7                     	;# 
   171  0DA8                     	;# 
   172  0DA9                     	;# 
   173  0DA9                     	;# 
   174  0DAA                     	;# 
   175  0DAB                     	;# 
   176  0DAC                     	;# 
   177  0DAC                     	;# 
   178  0DAD                     	;# 
   179  0DAD                     	;# 
   180  0DAE                     	;# 
   181  0DAF                     	;# 
   182  0DB0                     	;# 
   183  0DB1                     	;# 
   184  0DB1                     	;# 
   185  0DB2                     	;# 
   186  0DB3                     	;# 
   187  0DB3                     	;# 
   188  0DB4                     	;# 
   189  0DB5                     	;# 
   190  0DB5                     	;# 
   191  0DB6                     	;# 
   192  0DB7                     	;# 
   193  0DB7                     	;# 
   194  0DB8                     	;# 
   195  0DB9                     	;# 
   196  0DB9                     	;# 
   197  0DBA                     	;# 
   198  0DBB                     	;# 
   199  0DBC                     	;# 
   200  0DBC                     	;# 
   201  0DBD                     	;# 
   202  0DBD                     	;# 
   203  0DBE                     	;# 
   204  0DBF                     	;# 
   205  0DC0                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220                           
   221                           	psect	stringtext
   222  00EB                     __pstringtext:	
   223  00EB                     _code:	
   224  00EB  3419               	retlw	25
   225  00EC  3408               	retlw	8
   226  00ED                     __end_of_code:	
   227                           
   228                           	psect	nvBANK0
   229  0022                     __pnvBANK0:	
   230  0022                     _timer0ReloadVal:	
   231  0022                     	ds	1
   232  000C                     _PORTAbits	set	12
   233  000B                     _INTCONbits	set	11
   234  0015                     _TMR0	set	21
   235  0095                     _OPTION_REGbits	set	149
   236  008C                     _TRISAbits	set	140
   237  0097                     _WDTCON	set	151
   238  0098                     _OSCTUNE	set	152
   239  0099                     _OSCCON	set	153
   240  0095                     _OPTION_REG	set	149
   241  011D                     _APFCON	set	285
   242  010C                     _LATA	set	268
   243  018C                     _ANSELA	set	396
   244  020C                     _WPUA	set	524
   245                           
   246                           ; #config settings
   247  0000                     
   248                           	psect	cinit
   249  001F                     start_initialization:	
   250  001F                     __initialization:	
   251                           
   252                           ; Clear objects allocated to COMMON
   253  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   254  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   255  0021  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   256  0022  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   257  0023  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   258  0024                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  0024                     __end_of__initialization:	
   262  0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   263  0025  0020               	movlb	0
   264  0026  2827               	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0077                     __pbssCOMMON:	
   268  0077                     _process:	
   269  0077                     	ds	2
   270  0079                     _number:	
   271  0079                     	ds	2
   272  007B                     _flag:	
   273  007B                     	ds	1
   274                           
   275                           	psect	cstackCOMMON
   276  0070                     __pcstackCOMMON:	
   277  0070                     ?_TMR0_Initialize:	
   278  0070                     ?_OSCILLATOR_Initialize:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_WDT_Initialize:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_PIN_MANAGER_Initialize:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_INTERRUPT_InterruptManager:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ??_INTERRUPT_InterruptManager:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0070                     	ds	1
   299  0071                     ??_TMR0_Initialize:	
   300  0071                     ??_OSCILLATOR_Initialize:	
   301                           ; 1 bytes @ 0x1
   302                           
   303  0071                     ??_WDT_Initialize:	
   304                           ; 1 bytes @ 0x1
   305                           
   306  0071                     ??_PIN_MANAGER_Initialize:	
   307                           ; 1 bytes @ 0x1
   308                           
   309  0071                     ?___lwmod:	
   310                           ; 1 bytes @ 0x1
   311                           
   312  0071                     ___lwmod@divisor:	
   313                           ; 2 bytes @ 0x1
   314                           
   315                           
   316                           ; 2 bytes @ 0x1
   317  0071                     	ds	2
   318  0073                     ___lwmod@dividend:	
   319                           
   320                           ; 2 bytes @ 0x3
   321  0073                     	ds	2
   322  0075                     ??___lwmod:	
   323                           
   324                           ; 1 bytes @ 0x5
   325  0075                     	ds	1
   326  0076                     ___lwmod@counter:	
   327                           
   328                           ; 1 bytes @ 0x6
   329  0076                     	ds	1
   330                           
   331                           	psect	cstackBANK0
   332  0020                     __pcstackBANK0:	
   333  0020                     ??_main:	
   334                           
   335                           ; 1 bytes @ 0x0
   336  0020                     	ds	2
   337                           
   338                           	psect	maintext
   339  0027                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 136 in file "main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B1F/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   359 ;;      Params:         0       0       0       0
   360 ;;      Locals:         0       0       0       0
   361 ;;      Temps:          0       2       0       0
   362 ;;      Totals:         0       2       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels required when called:    2
   365 ;; This function calls:
   366 ;;		_OSCILLATOR_Initialize
   367 ;;		_PIN_MANAGER_Initialize
   368 ;;		_TMR0_Initialize
   369 ;;		_WDT_Initialize
   370 ;;		___lwmod
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           
   377                           ;psect for function _main
   378  0027                     _main:	
   379                           
   380                           ;main.c: 139: PIN_MANAGER_Initialize();
   381                           
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   384  0027  20BF               	fcall	_PIN_MANAGER_Initialize
   385                           
   386                           ;main.c: 140: OSCILLATOR_Initialize();
   387  0028  20E2               	fcall	_OSCILLATOR_Initialize
   388                           
   389                           ;main.c: 141: WDT_Initialize();
   390  0029  20E7               	fcall	_WDT_Initialize
   391                           
   392                           ;main.c: 142: TMR0_Initialize();
   393  002A  20D3               	fcall	_TMR0_Initialize
   394                           
   395                           ;main.c: 145: INTCONbits.GIE = 1;
   396  002B  178B               	bsf	11,7	;volatile
   397                           
   398                           ;main.c: 146: INTCONbits.PEIE = 1;
   399  002C  170B               	bsf	11,6	;volatile
   400                           
   401                           ;main.c: 148: flag.Tim320u = 0;
   402  002D  107B               	bcf	_flag,0	;volatile
   403  002E                     L2:	
   404                           
   405                           ;main.c: 149: number = 0;
   406  002E  01F9               	clrf	_number
   407  002F  01FA               	clrf	_number+1
   408  0030                     l642:	
   409                           ;main.c: 151: while (1)
   410                           
   411                           
   412                           ;main.c: 152: {
   413                           ;main.c: 153: if (flag.Tim320u)
   414  0030  1C7B               	btfss	_flag,0	;volatile
   415  0031  2830               	goto	l642
   416                           
   417                           ;main.c: 154: {
   418                           ;main.c: 155: if (number == 0)
   419  0032  0879               	movf	_number,w
   420  0033  047A               	iorwf	_number+1,w
   421  0034  1D03               	btfss	3,2
   422  0035  2840               	goto	l650
   423                           
   424                           ;main.c: 156: {
   425                           ;main.c: 157: PORTAbits.RA4 = 1;
   426  0036  0020               	movlb	0	; select bank0
   427  0037  160C               	bsf	12,4	;volatile
   428                           
   429                           ;main.c: 158: process = code;
   430  0038  30EB               	movlw	low (_code| (0+32768))
   431  0039  0084               	movwf	4
   432  003A  3080               	movlw	high (_code| (0+32768))
   433  003B  0085               	movwf	5
   434  003C  3F00               	moviw [0]fsr0
   435  003D  00F7               	movwf	_process
   436  003E  3F01               	moviw [1]fsr0
   437  003F  2883               	goto	L1
   438  0040                     l650:	
   439                           ;main.c: 159: }
   440                           
   441                           
   442                           ;main.c: 160: else
   443                           ;main.c: 161: {
   444                           ;main.c: 162: if (number <= 36)
   445  0040  3000               	movlw	0
   446  0041  027A               	subwf	_number+1,w
   447  0042  3025               	movlw	37
   448  0043  1903               	skipnz
   449  0044  0279               	subwf	_number,w
   450  0045  1803               	skipnc
   451  0046  2885               	goto	l60
   452                           
   453                           ;main.c: 163: {
   454                           ;main.c: 164: if ((number % 3) == 1) PORTAbits.RA4 = 0;
   455  0047  3003               	movlw	3
   456  0048  00F1               	movwf	___lwmod@divisor
   457  0049  3000               	movlw	0
   458  004A  00F2               	movwf	___lwmod@divisor+1
   459  004B  087A               	movf	_number+1,w
   460  004C  00F4               	movwf	___lwmod@dividend+1
   461  004D  0879               	movf	_number,w
   462  004E  00F3               	movwf	___lwmod@dividend
   463  004F  2093               	fcall	___lwmod
   464  0050  0371               	decf	?___lwmod,w
   465  0051  0472               	iorwf	?___lwmod+1,w
   466  0052  1D03               	btfss	3,2
   467  0053  2856               	goto	l656
   468  0054  0020               	movlb	0	; select bank0
   469  0055  120C               	bcf	12,4	;volatile
   470  0056                     l656:	
   471                           
   472                           ;main.c: 166: if ((number % 3) == 0) PORTAbits.RA4 = 1;
   473  0056  3003               	movlw	3
   474  0057  00F1               	movwf	___lwmod@divisor
   475  0058  3000               	movlw	0
   476  0059  00F2               	movwf	___lwmod@divisor+1
   477  005A  087A               	movf	_number+1,w
   478  005B  00F4               	movwf	___lwmod@dividend+1
   479  005C  0879               	movf	_number,w
   480  005D  00F3               	movwf	___lwmod@dividend
   481  005E  2093               	fcall	___lwmod
   482  005F  0871               	movf	?___lwmod,w
   483  0060  0472               	iorwf	?___lwmod+1,w
   484  0061  1D03               	btfss	3,2
   485  0062  2865               	goto	l660
   486  0063  0020               	movlb	0	; select bank0
   487  0064  160C               	bsf	12,4	;volatile
   488  0065                     l660:	
   489                           
   490                           ;main.c: 168: if ((number % 3) == 2)
   491  0065  3003               	movlw	3
   492  0066  00F1               	movwf	___lwmod@divisor
   493  0067  3000               	movlw	0
   494  0068  00F2               	movwf	___lwmod@divisor+1
   495  0069  087A               	movf	_number+1,w
   496  006A  00F4               	movwf	___lwmod@dividend+1
   497  006B  0879               	movf	_number,w
   498  006C  00F3               	movwf	___lwmod@dividend
   499  006D  2093               	fcall	___lwmod
   500  006E  3002               	movlw	2
   501  006F  0671               	xorwf	?___lwmod,w
   502  0070  0472               	iorwf	?___lwmod+1,w
   503  0071  1D03               	btfss	3,2
   504  0072  2887               	goto	l668
   505                           
   506                           ;main.c: 169: {
   507                           ;main.c: 170: if (process & 1) PORTAbits.RA4 = 1;
   508  0073  1C77               	btfss	_process,0
   509  0074  2878               	goto	l64
   510  0075  0020               	movlb	0	; select bank0
   511  0076  160C               	bsf	12,4	;volatile
   512  0077  287A               	goto	l666
   513  0078                     l64:	
   514                           
   515                           ;main.c: 171: else PORTAbits.RA4 = 0;
   516  0078  0020               	movlb	0	; select bank0
   517  0079  120C               	bcf	12,4	;volatile
   518  007A                     l666:	
   519                           
   520                           ;main.c: 172: process = process >> 1;
   521  007A  0878               	movf	_process+1,w
   522  007B  00A1               	movwf	??_main+1
   523  007C  0877               	movf	_process,w
   524  007D  00A0               	movwf	??_main
   525  007E  36A1               	lsrf	??_main+1,f
   526  007F  0CA0               	rrf	??_main,f
   527  0080  0820               	movf	??_main,w
   528  0081  00F7               	movwf	_process
   529  0082  0821               	movf	??_main+1,w
   530  0083                     L1:	
   531  0083  00F8               	movwf	_process+1
   532                           
   533                           ;main.c: 174: }
   534                           ;main.c: 175: }
   535  0084  2887               	goto	l668
   536  0085                     l60:	
   537                           
   538                           ;main.c: 176: else PORTAbits.RA4 = 0;
   539  0085  0020               	movlb	0	; select bank0
   540  0086  120C               	bcf	12,4	;volatile
   541  0087                     l668:	
   542                           
   543                           ;main.c: 177: }
   544                           ;main.c: 179: number++;
   545  0087  3001               	movlw	1
   546  0088  07F9               	addwf	_number,f
   547  0089  3000               	movlw	0
   548  008A  3DFA               	addwfc	_number+1,f
   549                           
   550                           ;main.c: 180: if (number > 1000) number = 0;
   551  008B  3003               	movlw	3
   552  008C  027A               	subwf	_number+1,w
   553  008D  30E9               	movlw	233
   554  008E  1903               	skipnz
   555  008F  0279               	subwf	_number,w
   556  0090  1C03               	skipc
   557  0091  2830               	goto	l642
   558  0092  282E               	goto	L2
   559  0093                     __end_of_main:	
   560                           
   561                           	psect	text1
   562  0093                     __ptext1:	
   563 ;; *************** function ___lwmod *****************
   564 ;; Defined at:
   565 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lwmod.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  divisor         2    1[COMMON] unsigned int 
   568 ;;  dividend        2    3[COMMON] unsigned int 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  counter         1    6[COMMON] unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  2    1[COMMON] unsigned int 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   580 ;;      Params:         4       0       0       0
   581 ;;      Locals:         1       0       0       0
   582 ;;      Temps:          1       0       0       0
   583 ;;      Totals:         6       0       0       0
   584 ;;Total ram usage:        6 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function ___lwmod
   596  0093                     ___lwmod:	
   597                           
   598                           ;incstack = 0
   599                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   600  0093  0871               	movf	___lwmod@divisor,w
   601  0094  0472               	iorwf	___lwmod@divisor+1,w
   602  0095  1903               	btfsc	3,2
   603  0096  28BA               	goto	l578
   604  0097  01F6               	clrf	___lwmod@counter
   605  0098  0AF6               	incf	___lwmod@counter,f
   606  0099                     l568:	
   607  0099  1BF2               	btfsc	___lwmod@divisor+1,7
   608  009A  28A5               	goto	l570
   609  009B  3001               	movlw	1
   610  009C                     u205:	
   611  009C  35F1               	lslf	___lwmod@divisor,f
   612  009D  0DF2               	rlf	___lwmod@divisor+1,f
   613  009E  0B89               	decfsz	9,f
   614  009F  289C               	goto	u205
   615  00A0  3001               	movlw	1
   616  00A1  00F5               	movwf	??___lwmod
   617  00A2  0875               	movf	??___lwmod,w
   618  00A3  07F6               	addwf	___lwmod@counter,f
   619  00A4  2899               	goto	l568
   620  00A5                     l570:	
   621  00A5  0872               	movf	___lwmod@divisor+1,w
   622  00A6  0274               	subwf	___lwmod@dividend+1,w
   623  00A7  1D03               	skipz
   624  00A8  28AB               	goto	u225
   625  00A9  0871               	movf	___lwmod@divisor,w
   626  00AA  0273               	subwf	___lwmod@dividend,w
   627  00AB                     u225:	
   628  00AB  1C03               	skipc
   629  00AC  28B1               	goto	l574
   630  00AD  0871               	movf	___lwmod@divisor,w
   631  00AE  02F3               	subwf	___lwmod@dividend,f
   632  00AF  0872               	movf	___lwmod@divisor+1,w
   633  00B0  3BF4               	subwfb	___lwmod@dividend+1,f
   634  00B1                     l574:	
   635  00B1  3001               	movlw	1
   636  00B2                     u235:	
   637  00B2  36F2               	lsrf	___lwmod@divisor+1,f
   638  00B3  0CF1               	rrf	___lwmod@divisor,f
   639  00B4  0B89               	decfsz	9,f
   640  00B5  28B2               	goto	u235
   641  00B6  3001               	movlw	1
   642  00B7  02F6               	subwf	___lwmod@counter,f
   643  00B8  1D03               	btfss	3,2
   644  00B9  28A5               	goto	l570
   645  00BA                     l578:	
   646  00BA  0874               	movf	___lwmod@dividend+1,w
   647  00BB  00F2               	movwf	?___lwmod+1
   648  00BC  0873               	movf	___lwmod@dividend,w
   649  00BD  00F1               	movwf	?___lwmod
   650  00BE  0008               	return
   651  00BF                     __end_of___lwmod:	
   652                           
   653                           	psect	text2
   654  00E7                     __ptext2:	
   655 ;; *************** function _WDT_Initialize *****************
   656 ;; Defined at:
   657 ;;		line 74 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   671 ;;      Params:         0       0       0       0
   672 ;;      Locals:         0       0       0       0
   673 ;;      Temps:          0       0       0       0
   674 ;;      Totals:         0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _WDT_Initialize
   687  00E7                     _WDT_Initialize:	
   688                           
   689                           ;main.c: 77: WDTCON = 0x16;
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _WDT_Initialize: [wreg]
   693  00E7  3016               	movlw	22
   694  00E8  0021               	movlb	1	; select bank1
   695  00E9  0097               	movwf	23	;volatile
   696  00EA  0008               	return
   697  00EB                     __end_of_WDT_Initialize:	
   698                           
   699                           	psect	text3
   700  00D3                     __ptext3:	
   701 ;; *************** function _TMR0_Initialize *****************
   702 ;; Defined at:
   703 ;;		line 43 in file "main.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   717 ;;      Params:         0       0       0       0
   718 ;;      Locals:         0       0       0       0
   719 ;;      Temps:          1       0       0       0
   720 ;;      Totals:         1       0       0       0
   721 ;;Total ram usage:        1 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           
   732                           ;psect for function _TMR0_Initialize
   733  00D3                     _TMR0_Initialize:	
   734                           
   735                           ;main.c: 48: OPTION_REG = (OPTION_REG & 0xC0) | 0xD1 & 0x3F;
   736                           
   737                           ;incstack = 0
   738                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
   739  00D3  0021               	movlb	1	; select bank1
   740  00D4  0815               	movf	21,w	;volatile
   741  00D5  39C0               	andlw	192
   742  00D6  3811               	iorlw	17
   743  00D7  0095               	movwf	21	;volatile
   744                           
   745                           ;main.c: 51: TMR0 = 0xFB;
   746  00D8  30FB               	movlw	251
   747  00D9  0020               	movlb	0	; select bank0
   748  00DA  0095               	movwf	21	;volatile
   749                           
   750                           ;main.c: 54: timer0ReloadVal= 251;
   751  00DB  30FB               	movlw	251
   752  00DC  00F1               	movwf	??_TMR0_Initialize
   753  00DD  0871               	movf	??_TMR0_Initialize,w
   754  00DE  00A2               	movwf	_timer0ReloadVal	;volatile
   755                           
   756                           ;main.c: 57: INTCONbits.TMR0IF = 0;
   757  00DF  110B               	bcf	11,2	;volatile
   758                           
   759                           ;main.c: 60: INTCONbits.TMR0IE = 1;
   760  00E0  168B               	bsf	11,5	;volatile
   761  00E1  0008               	return
   762  00E2                     __end_of_TMR0_Initialize:	
   763                           
   764                           	psect	text4
   765  00BF                     __ptext4:	
   766 ;; *************** function _PIN_MANAGER_Initialize *****************
   767 ;; Defined at:
   768 ;;		line 80 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   782 ;;      Params:         0       0       0       0
   783 ;;      Locals:         0       0       0       0
   784 ;;      Temps:          0       0       0       0
   785 ;;      Totals:         0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _PIN_MANAGER_Initialize
   798  00BF                     _PIN_MANAGER_Initialize:	
   799                           
   800                           ;main.c: 85: LATA = 0x00;
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   804  00BF  0022               	movlb	2	; select bank2
   805  00C0  018C               	clrf	12	;volatile
   806                           
   807                           ;main.c: 90: TRISAbits.TRISA4 = 0;
   808  00C1  0021               	movlb	1	; select bank1
   809  00C2  120C               	bcf	12,4	;volatile
   810                           
   811                           ;main.c: 91: PORTAbits.RA4 = 0;
   812  00C3  0020               	movlb	0	; select bank0
   813  00C4  120C               	bcf	12,4	;volatile
   814                           
   815                           ;main.c: 93: TRISAbits.TRISA2 = 0;
   816  00C5  0021               	movlb	1	; select bank1
   817  00C6  110C               	bcf	12,2	;volatile
   818                           
   819                           ;main.c: 94: PORTAbits.RA2 = 0;
   820  00C7  0020               	movlb	0	; select bank0
   821  00C8  110C               	bcf	12,2	;volatile
   822                           
   823                           ;main.c: 99: ANSELA = 0x00;
   824  00C9  0023               	movlb	3	; select bank3
   825  00CA  018C               	clrf	12	;volatile
   826                           
   827                           ;main.c: 104: WPUA = 0x3F;
   828  00CB  303F               	movlw	63
   829  00CC  0024               	movlb	4	; select bank4
   830  00CD  008C               	movwf	12	;volatile
   831                           
   832                           ;main.c: 105: OPTION_REGbits.nWPUEN = 0;
   833  00CE  0021               	movlb	1	; select bank1
   834  00CF  1395               	bcf	21,7	;volatile
   835                           
   836                           ;main.c: 111: APFCON = 0x00;
   837  00D0  0022               	movlb	2	; select bank2
   838  00D1  019D               	clrf	29	;volatile
   839  00D2  0008               	return
   840  00D3                     __end_of_PIN_MANAGER_Initialize:	
   841                           
   842                           	psect	text5
   843  00E2                     __ptext5:	
   844 ;; *************** function _OSCILLATOR_Initialize *****************
   845 ;; Defined at:
   846 ;;		line 64 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   860 ;;      Params:         0       0       0       0
   861 ;;      Locals:         0       0       0       0
   862 ;;      Temps:          0       0       0       0
   863 ;;      Totals:         0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _OSCILLATOR_Initialize
   876  00E2                     _OSCILLATOR_Initialize:	
   877                           
   878                           ;main.c: 67: OSCCON = 0x30;
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
   882  00E2  3030               	movlw	48
   883  00E3  0021               	movlb	1	; select bank1
   884  00E4  0099               	movwf	25	;volatile
   885                           
   886                           ;main.c: 69: OSCTUNE = 0x00;
   887  00E5  0198               	clrf	24	;volatile
   888  00E6  0008               	return
   889  00E7                     __end_of_OSCILLATOR_Initialize:	
   890                           
   891                           	psect	intentry
   892  0004                     __pintentry:	
   893 ;; *************** function _INTERRUPT_InterruptManager *****************
   894 ;; Defined at:
   895 ;;		line 118 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   909 ;;      Params:         0       0       0       0
   910 ;;      Locals:         0       0       0       0
   911 ;;      Temps:          1       0       0       0
   912 ;;      Totals:         1       0       0       0
   913 ;;Total ram usage:        1 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		Interrupt level 1
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922  0004                     _INTERRUPT_InterruptManager:	
   923                           
   924                           ;incstack = 0
   925  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   926                           
   927                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,0]
   928  0005  3180               	pagesel	$
   929  0006  0020               	movlb	0	; select bank0
   930  0007  087F               	movf	127,w
   931  0008  00F0               	movwf	??_INTERRUPT_InterruptManager
   932                           
   933                           ;main.c: 121: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   934  0009  1A8B               	btfsc	11,5	;volatile
   935  000A  1D0B               	btfss	11,2	;volatile
   936  000B  281A               	goto	i1l53
   937                           
   938                           ;main.c: 122: {
   939                           ;main.c: 123: INTCONbits.TMR0IF = 0;
   940  000C  110B               	bcf	11,2	;volatile
   941                           
   942                           ;main.c: 124: flag.Tim320u = 1;
   943  000D  147B               	bsf	_flag,0	;volatile
   944                           
   945                           ;main.c: 125: PORTAbits.RA2 = ~PORTAbits.RA2;
   946  000E  1003               	clrc
   947  000F  1D0C               	btfss	12,2	;volatile
   948  0010  1403               	setc
   949  0011  1C03               	btfss	3,0
   950  0012  2816               	goto	u27_20
   951  0013  0020               	movlb	0	; select bank0
   952  0014  150C               	bsf	12,2	;volatile
   953  0015  2818               	goto	i1l590
   954  0016                     u27_20:	
   955  0016  0020               	movlb	0	; select bank0
   956  0017  110C               	bcf	12,2	;volatile
   957  0018                     i1l590:	
   958                           
   959                           ;main.c: 127: TMR0 = timer0ReloadVal;
   960  0018  0822               	movf	_timer0ReloadVal,w	;volatile
   961  0019  0095               	movwf	21	;volatile
   962  001A                     i1l53:	
   963                           ;main.c: 129: else
   964                           ;main.c: 130: {
   965                           
   966                           ;main.c: 128: }
   967                           
   968  001A  0870               	movf	??_INTERRUPT_InterruptManager,w
   969  001B  00FF               	movwf	127
   970  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   971  001D  0009               	retfie
   972  001E                     __end_of_INTERRUPT_InterruptManager:	
   973  007E                     btemp	set	126	;btemp
   974  007E                     int$flags	set	126
   975  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    2
    Data        0
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2       3
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     417
                                              0 BANK0      2     2      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     417
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_InterruptManager                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _TMR0_Initialize
   _WDT_Initialize
   ___lwmod

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       3       6        3.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       F      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed May 24 15:41:58 2017

                        __CFG_CP$OFF 0000                                   l60 0085  
                                 l64 0078                      _timer0ReloadVal 0022  
                        __CFG_LVP$ON 0000                                  l570 00A5  
                                l650 0040                                  l642 0030  
                                l660 0065                                  l574 00B1  
                                l568 0099                                  l656 0056  
                                l578 00BA                                  l666 007A  
                                l668 0087                                  u205 009C  
                                u225 00AB                                  u235 00B2  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                               _LATA 010C                                 i1l53 001A  
                               _TMR0 0015                                 _WPUA 020C  
                       __CFG_WRT$OFF 0000                                 _code 00EB  
                               _flag 007B                                 _main 0027  
                               fsr0h 0005                                 fsr0l 0004  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 001E                        __CFG_MCLRE$ON 0000  
            __end_of_TMR0_Initialize 00E2       __size_of_OSCILLATOR_Initialize 0005  
      __end_of_OSCILLATOR_Initialize 00E7                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      __end_of___lwmod 00BF  
                              i1l590 0018                                u27_20 0016  
                     _WDT_Initialize 00E7                                status 0003  
                              wtemp0 007E                      __initialization 001F  
                       __end_of_code 00ED                         __end_of_main 0093  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 0020  
                     __CFG_PLLEN$OFF 0000               __end_of_WDT_Initialize 00EB  
                             _APFCON 011D                               _ANSELA 018C  
                             _OSCCON 0099                               _WDTCON 0097  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                          ??___lwmod 0075                     ?_TMR0_Initialize 0070  
                             _number 0079                      ?_WDT_Initialize 0070  
            __end_of__initialization 0024                       __pcstackCOMMON 0070  
                     _OPTION_REGbits 0095                           __pmaintext 0027  
                         __pintentry 0004                              _OSCTUNE 0098  
                            ___lwmod 0093                              __ptext1 0093  
                            __ptext2 00E7                              __ptext3 00D3  
                            __ptext4 00BF                              __ptext5 00E2  
              _OSCILLATOR_Initialize 00E2             ??_PIN_MANAGER_Initialize 0071  
                            _process 0077                 end_of_initialization 0024  
                       __pstringtext 00EB                     ??_WDT_Initialize 0071  
                          _PORTAbits 000C                     __CFG_FOSC$INTOSC 0000  
                          _TRISAbits 008C               ?_OSCILLATOR_Initialize 0070  
                start_initialization 001F             __size_of_TMR0_Initialize 000F  
    __size_of_PIN_MANAGER_Initialize 0014                     __CFG_LPBOREN$OFF 0000  
                        __pbssCOMMON 0077                            ___latbits 0000  
                      __pcstackBANK0 0020                            __pnvBANK0 0022  
             _PIN_MANAGER_Initialize 00BF                             ?___lwmod 0071  
       ??_INTERRUPT_InterruptManager 0070                    ??_TMR0_Initialize 0071  
__size_of_INTERRUPT_InterruptManager 001A              ??_OSCILLATOR_Initialize 0071  
                   __size_of___lwmod 002C                        __size_of_main 006C  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001E  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
                   ___lwmod@dividend 0073              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                           _OPTION_REG 0095  
                    ___lwmod@divisor 0071                      _TMR0_Initialize 00D3  
                    ___lwmod@counter 0076       __end_of_PIN_MANAGER_Initialize 00D3  
